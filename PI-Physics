#include <stdio.h>
#include <math.h>
#define M1 1
#define M2 100
#define V -1 

long double p = M2 * V;
long double E = M2 * M2 * V / 2;

int one_step(long double * v1, long double * v2, int * cnt) {
	long double V1, V2;
	V1 = (M1 - M2)**v1 / (M1 + M2) + 2 * M2**v2 / (M1 + M2);
	V2 = (M2 - M1)**v2 / (M1 + M2) + 2 * M1**v1 / (M1 + M2);

	if (V1 < 0) {
		if (V2 < 0) {
			*cnt += 2;
			*v1 = -V1;
			*v2 = V2;
			return 1;
		}
		else if(abs(V1) > abs(V2)){
			*cnt += 2;
			*v1 = -V1;
			*v2 = V2;
			return 1;
		}
		else {
			*cnt += 2;
			*v1 = -V1;
			*v2 = V2;
			return 0;
		}
	}
	else if (V1 > V2) {
		*cnt += 1;
		*v1 = V1;
		*v2 = V2;
		return 1;
	}
	else {
		*cnt += 1;
		*v1 = V1;
		*v2 = V2;
		return 0;
	}
}

int main() {
	long double v1, v2;
	v1 = 0, v2 = V;
	int cnt = 0;

	while (one_step(&v1, &v2, &cnt)) {
	}
	printf("%d", cnt);
}
